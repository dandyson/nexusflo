name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, bcmath, soap, intl, gd, exif, iconv

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Setup Environment
        run: |
          cp .env.example .env
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=mysql/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
          sed -i 's/DB_DATABASE=laravel/DB_DATABASE=test_db/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=root/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=root/' .env
        # Generate the application key after setting up .env
      - name: Generate Key
        run: php artisan key:generate

      - name: Wait for MySQL
        run: |
          sudo apt-get install -y netcat
          until nc -z -v -w30 127.0.0.1 3306; do
            echo "Waiting for database connection..."
            sleep 5
          done
        shell: bash

      - name: Run Migrations
        run: php artisan migrate --no-interaction --force

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: test_db
          DB_USERNAME: root
          DB_PASSWORD: root
        run: vendor/bin/phpunit

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Run Duster Lint
        uses: tighten/duster-action@v2
        with:
          args: lint
